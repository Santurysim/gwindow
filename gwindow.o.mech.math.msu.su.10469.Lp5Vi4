class CAcrApp
    Description: Main application object
    Definition file: acr.h
    Implementation files:
        acr.cpp Support of main structure, documents and views creation, database queries etc.
        acr1.cpp Part 2: Autotasks, import from server

class CAcrDoc
    Description: Object that contains all patient data
    Definition file: acrDoc.h
    Implementation files:
        acrDoc.cpp Implementation
        acrDoc2.cpp Second part
        acrDoc3.cpp Third part: Patient information
        acrDoc4.cpp Forth part: 3D in volume
        acrDoc5.cpp Constants for 3D reconstruction
        acrDoc6.cpp Fifth part: Pseudo-triangulation
        acrDoc7.cpp Six part, triangulation
        acrDoc8.cpp 7th part: Orthocuts, VOI statistics, measurement, calcium
        acrDoc9.cpp Input patient files after FTP transfer
        acrDoc10.cpp Work with topogramm
        acrDoc11.cpp Screenshots
        acrDoc12.cpp Work with oblique planes
        acrDoc13.cpp 3D in volume, slanted case
        acrDoc14.cpp Work with laser imager
        acrDoc15.cpp Scanogram animation
        acrDoc16.cpp Automatic contour detection
        acrDoc17.cpp Full screen
        acrDoc18.cpp Work with vertical bitmasks
        acrDoc19.cpp Path definition
        acrDoc20.cpp Computing of lesion triangulation
        acrDoc21.cpp Annotation & Arrows on images
        acrDoc22.cpp ACRNEMA->DICOM conversion
        acrDoc23.cpp Oblique MPR
        acrDoc24.cpp Curved MPR
        acrDoc25.cpp Lung Tumor detection
        acrDoc26.cpp Work with prothesis
        acrDoc27.cpp TAC Images
        acrDoc28.cpp Emphysema
        acrDoc29.cpp 3D Oncology detection
        acrDoc30.cpp Lung segmentation
        acrDoc31.cpp Loading scans in a separate thread
class CAcrView:
    Description: Main View for patient data (CAcrDoc class)
    Definition file: acrView.h
    Implementation files:
        acrView.cpp
class CAcrDraw:
    Description: Drawing Area for original images
    Definition file: acrDraw.h
    Implementation files:
        acrDraw.cpp
class CAcrDraw1:
    Description: Drawing Area for reconstructed images (MPR, Sagotal, Coronal etc.)
    Definition file: acrDraw.h
    Implementation files:
        acrDraw.cpp

class C4Doc:
    Description: 4 series document - old version
    Definition file: 4DOC.H
    Implementation files:
         4Doc.cpp

class C4Draw:
    Description: 4 Series draw - old version
    Definition file: 4Draw.h
    Implementation files:
         4Draw.cpp

class C4SeriesFrame:
    Description: 4 series new Frame
    Definition file: 4SerFrame.h
    Implementation files:
         4SerFrame.cpp

class C4SeriesView:
    Description: 4 series new View
    Definition file: 4SERView.H
    Implementation files:
         4SERView.cpp

class C4SeriesDoc:
    Description: 4 series new document
    Definition file: 4SerDoc.h
    Implementation files:
         4SerDoc.cpp

class CAbutment:
    Description: Work with abutments (dental prothesys)
    Definition file: abutement.H
    Implementation files:
         abutement.cpp

class CAboutDlg:
    Description: Information dialogue about the application vesion and licence
    Definition file: Acr.cpp
    Implementation files:
         Acr.cpp

class C3DCoordSystem:
    Description: An object representing 3D coordinate system and transformations
    Definition file: Acr3DSys.h
    Implementation files:

class C3DView:
    Description: 3D View window (non OpenGL version)
    Definition file: Acr3DVw.h
    Implementation files:
        Acr3DVw.cpp

class C3DDraw:
    Description: 3D Drawing Area (non OpenGL version)
    Definition file: Acr3DDw.h
    Implementation files:
        Acr3DDw.cpp

class CAcrCommandLineInfo:
    Description: Work with the program command line
    Definition file: AcrCmInf.h
    Implementation files:
        AcrCmInf.cpp

class CBaseCurveDlg:
    Description: Dental curve definition dialogue
    Definition file: AcrCurve.h
    Implementation files:
        AcrCurve.cpp

class CAcrDatabaseDoc:
    Description: Fictive document used to open a database view
    Definition file: ³AcrDBDoc.h
    Implementation files:
        AcrDBDoc.cpp

class CAcrDatabaseView:
    Description: Database view (table of patients and series)
    Definition file: DBView.h
    Implementation files:
        DBView.cpp

class CAcrDatabaseFrame:
    Description: Database Frame window
    Definition file: DBFrame.h
    Implementation files:
        DBFrame.cpp

class CStoreSCPOptionsDlg:
    Description: Store SCP Options Dialog
    Definition file: StoreOpt.h
    Implementation files:
        StoreOpt.cpp

class CStoreSCUOptionsDlg:
    Description: Store SCU Options Dialog
    Definition file: StSCUOpt.h
    Implementation files:
        StSCUOpt.cpp

class CPrintClientOptDlg:
    Description: Print SCU Options Dialog
    Definition file: PrCliOpt.h
    Implementation files:
        PrCliOpt.cpp

class CPrintClientDlg:
    Description: Print Client Dialog (for Laser Imager)
    Definition file: PrCliDlg.h
    Implementation files:
        PrCliDlg.cpp

class FilmFormat:
    Description: Format of Laser Imager Film
    Definition file: PrCliDlg.h
    Implementation files:


class CUID:
    Description: Work with Unique IDentifiers
    Definition file: UID.h
    Implementation files:
        UID.cpp

class CUIDDlg:
    Description: Dialogue to define the root UID
    Definition file: UIDDlg.h
    Implementation files:
        UIDDlg.cpp

class CPatientID:
    Description: Object that stores the patient data
    Definition file: PatID.h
    Implementation files:
        PatID.cpp

class CSecondInstanceDlg:
    Description: Dialogue used to prevent starting the second instance of program
    Definition file: SecInsDl.h
    Implementation files:
        SecInsDl.cpp

class SettingsSaver:
    Description: Class used to save all parameters of the program in INI-file
    Definition file: SetSave.h
    Implementation files:
        SetSave.cpp

class CLogger:
    Description: Class to write information about program execution (Logger)
    Definition file: logger.h
    Implementation files:
        logger.cpp

class CFtpReceivingDlg:
    Description: Dialogue used to receive images via FTP protocol
    Definition file: FtpRecDl.h
    Implementation files:
        FtpRecDl.cpp

class CChangeLicenseDlg:
    Description: Dialogue for changing the licence
    Definition file: LicensDl.h
    Implementation files:
        LicensDl.cpp

class ResourceDB:
    Description: Resource Database - class that keeps all resources used by the program and writes/reads them to disk between sessions
    Definition file: rcdb.h
    Implementation files:
        rcdb.cpp

class RealColor:
    Description: Class representing a True-Type color
    Definition file: colors24.h
    Implementation files:
        colors24.cpp

class CMyColorDlg:
    Description: Dialogue to define a True-Type color
    Definition file: MyColDlg.h
    Implementation files:
        MyColDlg.cpp

class CMyColorDraw:
    Description: Drawing Area used in CMyColorDlg to select a true-type color
    Definition file: MyColDw.h
    Implementation files:
        MyColDw.cpp

class CMySocket:
    Description: Clacc derived from CAsyncSocket and used in FTP-protocol to transfer data
    Definition file: ftpddlg.h
    Implementation files:
        ftpddlg.h

class CMyConnSocket:
    Description: Clacc derived from CAsyncSocket and used in FTP-protocol to accept connections
    Definition file: ftpddlg.h
    Implementation files:
        ftpddlg.cpp

class CFtpdDlg:
    Description: Dialogue for receiving images via FTP-protocol
    Definition file: ftpddlg.h
    Implementation files:
        ftpddlg.cpp

class CSendSocket:
    Description: Clacc derived from CAsyncSocket and used to send data over TCP/IP network
    Definition file: Sendrec.h
    Implementation files:
        Sendrec.cpp

class CReceiveSocket:
    Description: Clacc derived from CAsyncSocket and used to receive data over TCP/IP network
    Definition file: Sendrec.h
    Implementation files:
        Sendrec.cpp

class CFtpcDlg:
    Description: FTP-Client dialogue
    Definition file: FtpcDl.h
    Implementation files:
        FtpcDl.cpp

class FTPCParams:
    Description: Class used to store parameters of FTP-connection
    Definition file: ftpctr.h
    Implementation files:
        ftpctr.cpp

class CCliSendSocket:
    Description: Clacc derived from CAsyncSocket and used to send data over TCP/IP network, new version
    Definition file: SndRec2.h
    Implementation files:
        SndRec2.cpp

class CCliReceiveSocket:
    Description: Clacc derived from CAsyncSocket and used to receive data over TCP/IP network, new version
    Definition file: SndRec2.h
    Implementation files:
        SndRec2.cpp

class CCreatePDBDlg:
    Description: Dialogue used to create a patient database
    Definition file: CreatePD.h
    Implementation files:
        CreatePD.cpp

class PDBRecord:
    Description: Record in Patient Database
    Definition file: patdb.h
    Implementation files:
        patdb.cpp

class PatientDB:
    Description: Patient Database (Document-type object without View)
    Definition file: patdb.h
    Implementation files:
        patdb.cpp

class PatSeriesMap:
    Description: Mapping from patients records to the lists of series numbers used by a patient (used in creation of new series)
    Definition file: PatMap.h
    Implementation files:
        PatMap.cpp

class CSlantedSeriesDlg:
    Description: Dialogue to define parameters of new series with different scans orientation
    Definition file: SlSerDlg.h
    Implementation files:
        SlSerDlg.cpp

class CRotatedSeriesDlg:
    Description: Dialogue to define parameters of new series with partient body turned around vertical axis
    Definition file: RotSerDl.h
    Implementation files:
        RotSerDl.cpp

class PatNewDialog:
    Description: Dialogue to define a new patient (old-style work)
    Definition file: PatNewDl.h
    Implementation files:
        PatNewDl.cpp

class CSplittingCriterionsDlg:
    Description: Dialogue used to set the criteria of series splitting
    Definition file: SplitDlg.h
    Implementation files:
        SplitDlg.cpp

class CListNewPatientsDlg:
    Description: Dialogue that contains a list of new patients received
    Definition file: LstNewDl.h
    Implementation files:
        LstNewDl.cpp

class PatOpenDialog:
    Description: Dialogue used to open a patient
    Definition file: PODlg.h
    Implementation files:
        PODlg.cpp

class CChangePatDataDlg:
    Description: Dialogue used to change a patient data
    Definition file: ChPatDlg.h
    Implementation files:
        ChPatDlg.cpp

class CAutoTaskDlg:
    Description: Non-modal dialogue used for automatic tasks (load several patients, open a view to compare series, etc.)
    Definition file: AutoTsDl.h
    Implementation files:
        AutoTsDl.cpp

class CDailyList:
    Description: Daily Worklist View
    Definition file: DayList.h
    Implementation files:
        DayList.cpp

class CRemovePatientDlg:
    Description: Dialogue used to remove a patient
    Definition file: RmPatDlg.h
    Implementation files:
        RmPatDlg.cpp

class CPatientMoveDlg:
    Description: Dialogue used to move a patient to new location/database
    Definition file: PatMvDlg.h
    Implementation files:
        PatMvDlg.cpp

class CVirtPatDirDlg:
    Description: Dialogue used to select a directory for patient files import
    Definition file: VPatDir.h
    Implementation files:
        VPatDir.cpp

class CTable:
    Description: Interface for MFC CListCtrl class to show Explorer-style tables
    Definition file: table.h
    Implementation files:
        table.cpp

class CPointArray:
    Description: Array of CPoints (based on CArray template class)
    Definition file: cpntarr.h
    Implementation files:
        cpntarr.cpp

class CFreezeDlg:
    Description: Dialogue used to freeze images (compress with gzip)
    Definition file: FreezeDl.h
    Implementation files:
        FreezeDl.cpp

class CBoneDensityDlg:
    Description: Bone Density Measurement Dialog
    Definition file: BoneDlg.h
    Implementation files:
        BoneDlg.cpp

class CPhantomDefinition:
    Description: Definition of the Bone Density Measurement Phantom
    Definition file: BoneDens.h
    Implementation files:
        BoneDens.cpp

class CalibrationPhantom:
    Description: Calobration Phantom used for bone density measurement
    Definition file: BoneDens.h
    Implementation files:
        BoneDens.cpp

class CBoneDensityMeasuring:
    Description: Class used for Bone Density measurement
    Definition file: BoneDens.h
    Implementation files:
        BoneDens.cpp

class CPhantomParamsDlg:
    Description: Dialogue used to set parameters of Bone Density Phantom
    Definition file: PhantDlg.h
    Implementation files:
        PhantDlg.cpp

class CBMDResultsDlg:
    Description: Dialogue used to show results of bone density measurement
    Definition file: BMDResDl.h
    Implementation files:
        BMDResDl.cpp

class CBMDResultsDraw:
    Description: Draw Area inside the CBMDResultsDlg used to show the result of Bone density measurement
    Definition file: BMDResDw.h
    Implementation files:
        BMDResDw.cpp

class CHUMeasurementDlg:
    Description: HU Measurement dialogue
    Definition file: HUMeasDl.h
    Implementation files:
        HUMeasDl.cpp

class CHUMeasureRegion:
    Description: Object representing a single region of HU-measurement
    Definition file: HUMeas.h
    Implementation files:
        HUMeas.cpp

class CHUMeasure:
    Description: An object representing an array of regions (class CHUMeasureRegion) for HU measurement
    Definition file: HUMeas.h
    Implementation files:
        HUMeas.cpp

class CReconstructionOptionsDlg:
    Description: Dialogue to show/set parameters of MPR reconstruction
    Definition file: ReconDlg.h
    Implementation files:
        ReconDlg.cpp

class CVRProjectionDlg:
    Description: Dialogue to set the parameters of projection used to compute a volume-rendered image
    Definition file: VRProjDl.h
    Implementation files:
        VRProjDl.cpp

class CObliqueView:
    Description: Oblique MPR View
    Definition file: OblView.h
    Implementation files:
        OblView.cpp

class CObliqueAxialView:
    Description: Axial view in Oblique MPR window
    Definition file: OblAView.h
    Implementation files:
        OblAView.cpp

class CObliqueAxialDraw:
    Description: Axial Draw Area in Oblique MPR window
    Definition file: OblAxial.h
    Implementation files:
        OblAxial.cpp

class CObliqueSagittalDraw:
    Description: Sagittal Draw Area in Oblique MPR window
    Definition file: OblSagit.h
    Implementation files:
        OblSagit.cpp

class CObliqueCoronalDraw:
    Description: Coronal Draw Area in Oblique MPR window
    Definition file: OblCoron.h
    Implementation files:
        OblCoron.cpp

class CObliqueAngleDraw:
    Description: Draw Area in Oblique MPR window that shows positions and orientations of sections
    Definition file: OblAngDw.h
    Implementation files:
        OblAngDw.cpp

class CCurveView:
    Description: Curve View in Oblique MPR window
    Definition file: CurvView.h
    Implementation files:
        CurvView.cpp

class CCurveBaseView:
    Description: Curve Base View inside the oblique MPR window
    Definition file: CurvBVw.h
    Implementation files:
        CurvBVw.cpp

class CCurveBaseDraw:
    Description: Draw Area for the base curve definition in oblique MPR window
    Definition file: CurvBase.h
    Implementation files:
        CurvBase.cpp

class
    Description:
    Definition file:
    Implementation files:


class
    Description:
    Definition file:
    Implementation files:


class
    Description:
    Definition file:
    Implementation files:


class
    Description:
    Definition file:
    Implementation files:


class
    Description:
    Definition file:
    Implementation files:


class
    Description:
    Definition file:
    Implementation files:


class
    Description:
    Definition file:
    Implementation files:


class
    Description:
    Definition file:
    Implementation files:


class
    Description:
    Definition file:
    Implementation files:


class
    Description:
    Definition file:
    Implementation files:


class
    Description:
    Definition file:
    Implementation files:


class
    Description:
    Definition file:
    Implementation files:


class
    Description:
    Definition file:
    Implementation files:


class
    Description:
    Definition file:
    Implementation files:


class
    Description:
    Definition file:
    Implementation files:


class
    Description:
    Definition file:
    Implementation files:


class
    Description:
    Definition file:
    Implementation files:


class
    Description:
    Definition file:
    Implementation files:


==============================

class
    Description:
    Definition file:
    Implementation files:


